name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  build-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [frontend, backend, ml-service]

    steps:
    - uses: actions/checkout@v4

    - name: Setup Node.js (Frontend)
      if: matrix.service == 'frontend'
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
      env:
        CI: true

    - name: Build & Test Frontend
      if: matrix.service == 'frontend'
      run: |
        cd frontend
        npm ci
        npm run build
        npm test -- --watchAll=false

    - name: Setup Python (Backend/ML)
      if: matrix.service != 'frontend'
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        cache: 'pip'
        cache-dependency-path: |
          backend/requirements.txt
          ml-service/requirements.txt

    - name: Build & Test Backend
      if: matrix.service == 'backend'
      run: |
        cd backend
        pip install -r requirements.txt
        python manage.py migrate --settings=job_matching.settings.test  # Use test settings
        python manage.py test

    - name: Build & Test ML Service
      if: matrix.service == 'ml-service'
      run: |
        cd ml-service
        pip install -r requirements.txt
        pytest

  docker-build-push:
    needs: build-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop'
    steps:
    - uses: actions/checkout@v4

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build & Push Frontend
      run: |
        cd frontend
        docker build -t rahul9561/job-matching-frontend:${{ github.sha }} .
        docker push rahul9561/job-matching-frontend:${{ github.sha }}

    - name: Build & Push Backend
      run: |
        cd backend
        docker build -t rahul9561/job-matching-backend:${{ github.sha }} .
        docker push rahul9561/job-matching-backend:${{ github.sha }}

    - name: Build & Push ML Service
      run: |
        cd ml-service
        docker build -t rahul9561/job-matching-ml:${{ github.sha }} .
        docker push rahul9561/job-matching-ml:${{ github.sha }}

  deploy:
    needs: docker-build-push
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
    - name: Deploy to Production
      run: |
        # Add your deploy script here (e.g., kubectl apply, or SSH to server)
        echo "Deploying to prod with tag ${{ github.sha }}"
        # Example: curl -X POST https://your-deploy-hook.com/deploy?tag=${{ github.sha }}
